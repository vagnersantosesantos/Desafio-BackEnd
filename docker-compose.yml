version: '3.8'

services:
  api:
    build: .
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Storage__LocalPath=/app/uploads
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=motorcycle_rental;Username=admin;Password=P@ssw0rd123
      - ConnectionStrings__RabbitMQ=amqp://guest:guest@rabbitmq:5672/
    volumes:
      - uploads_data:/app/uploads
    networks:
      - motorcycle_rental_network
    depends_on:
      - postgres
      - rabbitmq

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: motorcycle_rental
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: P@ssw0rd123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - motorcycle_rental_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d motorcycle_rental"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - motorcycle_rental_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - motorcycle_rental_network
    profiles:
      - tools

volumes:
  uploads_data:
  postgres_data:
  rabbitmq_data:
  pgadmin_data:

networks:
  motorcycle_rental_network:
    driver: bridge